{"ast":null,"code":"var _jsxFileName = \"D:\\\\colty\\\\Documents\\\\coding_projects\\\\Thinkful\\\\FrontEnd\\\\RenderingWithReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [activeTime, setActiveTime] = useState(focusTime * 60);\n  const [completedPercentage, setCompletedPercentage] = useState(0);\n  const [formatedPercentage, setFormatedPercentage] = useState('');\n  const [focusOrBreak, setFocusOrBreak] = useState(true);\n  const [paused, setPaused] = useState(false);\n\n  const decreaseFocusTime = () => {\n    if (focusTime <= 5) {} else {\n      setFocusTime(currentTime => currentTime - 6);\n      setActiveTime(currentTime => currentTime - 6 * 60);\n      return focusTime;\n    }\n  };\n\n  const increaseFocusTime = () => {\n    if (focusTime >= 60) {} else {\n      setFocusTime(currentTime => currentTime + 5);\n      setActiveTime(currentTime => currentTime + 5 * 60);\n      return focusTime;\n    }\n  };\n\n  const adjustActiveTime = breakOrFocus => {\n    setActiveTime(currentTime => currentTime = breakOrFocus * 60);\n  };\n\n  const decreaseBreakTime = () => {\n    if (breakTime <= 1) {} else {\n      setBreakTime(currentTime => currentTime - 1);\n      return breakTime;\n    }\n  };\n\n  const increaseBreakTime = () => {\n    if (breakTime >= 15) {} else {\n      setBreakTime(currentTime => currentTime + 1);\n      return breakTime;\n    }\n  };\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (isTimerRunning) {\n      //decrease active counter by 1sec per sec\n      setActiveTime(currentTime => currentTime - 1);\n\n      if (activeTime <= 0) {\n        if (focusOrBreak) {\n          adjustActiveTime(breakTime);\n          setFocusOrBreak(!focusOrBreak);\n        } else {\n          adjustActiveTime(focusTime);\n          setFocusOrBreak(!focusOrBreak);\n        }\n      }\n\n      setCompletedPercentage(currentPercentage => {\n        //find what percentage we are completed by\n        currentPercentage = ((1 - activeTime / (focusTime * 60)) * 100).toFixed(2); //format completed percentage\n\n        setFormatedPercentage(currentPercentage + '%');\n      });\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setPaused(prevState => !prevState);\n  }\n\n  function stop() {\n    adjustActiveTime(focusTime);\n    playPause();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decreaseFocusTime,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increaseFocusTime,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decreaseBreakTime,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increaseBreakTime,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stop,\n    disabled: !isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 1\n    }\n  }, focusOrBreak ? 'Focusing' : 'On Break', \" for \", minutesToDuration(focusTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, secondsToDuration(activeTime), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }\n  }, \"Paused\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": `${currentPercentage}` // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${formatedPercentage}`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["D:/colty/Documents/coding_projects/Thinkful/FrontEnd/RenderingWithReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","breakTime","setBreakTime","activeTime","setActiveTime","completedPercentage","setCompletedPercentage","formatedPercentage","setFormatedPercentage","focusOrBreak","setFocusOrBreak","paused","setPaused","decreaseFocusTime","currentTime","increaseFocusTime","adjustActiveTime","breakOrFocus","decreaseBreakTime","increaseBreakTime","currentPercentage","toFixed","playPause","prevState","stop","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5)\n  const [activeTime, setActiveTime] = useState(focusTime*60)\n  const [completedPercentage, setCompletedPercentage] = useState(0)\n  const [formatedPercentage, setFormatedPercentage] = useState('')\n  const [focusOrBreak, setFocusOrBreak] = useState(true);\n  const [paused, setPaused] = useState(false);\n  \n  const decreaseFocusTime = () => {\n\t\tif(focusTime <= 5){\n\t\t}else{\n\t\t\tsetFocusTime((currentTime) => currentTime -6)\n\t\t\tsetActiveTime((currentTime) => currentTime- (6*60) )\n\t\t\treturn focusTime\n\t\t}\n  }\n  \n  const increaseFocusTime =() => {\n\t  if(focusTime >= 60){\n\t  }else{\n\t\t\tsetFocusTime((currentTime) => currentTime +5)\n\t\t\tsetActiveTime((currentTime) => currentTime+ (5*60) )\n\t\t\treturn focusTime\n\t\t}\n  }\n  \n  const adjustActiveTime = (breakOrFocus) => {\n\t  setActiveTime((currentTime) => currentTime = breakOrFocus *60)\n  }\n  \n  const decreaseBreakTime = () => {\n\t  if(breakTime <= 1){\n\t  }else{\n\t\t\tsetBreakTime((currentTime) => currentTime -1)\n\t\t\treturn breakTime\n\t\t}\n  }\n  \n  const increaseBreakTime = () => {\n\t  if(breakTime >= 15){\n\t  }else{\n\t\t\tsetBreakTime((currentTime) => currentTime +1)\n\t\t\treturn breakTime\n\t\t}\n  }\n  \n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n\t  if(isTimerRunning){\n\t\t  //decrease active counter by 1sec per sec\n\t\t  setActiveTime((currentTime) => currentTime-1)\n\t\t  if(activeTime <=0){\n\t\t\t  if(focusOrBreak){\n\t\t\t\tadjustActiveTime(breakTime)\n\t\t\t\tsetFocusOrBreak(!focusOrBreak)\n\t\t\t  }else{\n\t\t\t\t  adjustActiveTime(focusTime)\n\t\t\t\t  setFocusOrBreak(!focusOrBreak)\n\t\t\t  }\n\t\t  }\n\t\t  \n\t\t  setCompletedPercentage((currentPercentage) => {\n\t\t\t\t//find what percentage we are completed by\n\t\t\t\tcurrentPercentage = ((1-(activeTime/ (focusTime*60))) *100).toFixed(2)\n\t\t\t\t//format completed percentage\n\t\t\t\tsetFormatedPercentage(currentPercentage+'%')\n\t\t\t});\n\t  }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n\tsetPaused((prevState) => !prevState);\n  }\n  \n  function stop() {\n\t  adjustActiveTime(focusTime);\n\t  playPause();\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusTime)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n\t\t\t\tonClick={decreaseFocusTime}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n\t\t\t\tdisabled={isTimerRunning}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n\t\t\t\tonClick={increaseFocusTime}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n\t\t\t\tdisabled={isTimerRunning}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n\t\t\t\t  onClick={decreaseBreakTime}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n\t\t\t\t  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n\t\t\t\tonClick={increaseBreakTime}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n\t\t\t\t  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n\t\t\t  onClick={stop}\n\t\t\t  disabled={!isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n<h2 data-testid=\"session-title\">{focusOrBreak ? 'Focusing' : 'On Break'} for {minutesToDuration(focusTime)} minutes</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n\t\t\t{secondsToDuration(activeTime)} remaining\n            </p>\n\t\t\t<h3>Paused</h3>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={`${currentPercentage}` }// TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${formatedPercentage}` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}