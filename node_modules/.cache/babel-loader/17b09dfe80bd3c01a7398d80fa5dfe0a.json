{"ast":null,"code":"var _jsxFileName = \"D:\\\\colty\\\\Documents\\\\coding_projects\\\\Thinkful\\\\FrontEnd\\\\RenderingWithReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\DisplayTime.js\";\nimport React from 'react';\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction DisplayTime({\n  focusOrBreak,\n  breakTime,\n  focusTime,\n  activeTime,\n  stopped,\n  paused,\n  formatedPercentage\n}) {\n  console.log(activeTime);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    style: stopped ? {\n      opacity: 0\n    } : {\n      opacity: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  }, focusOrBreak ? 'Focusing' : 'On Break', \" for \", focusOrBreak ? minutesToDuration(focusTime) : minutesToDuration(breakTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, secondsToDuration(activeTime), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: paused ? {\n      opacity: 0\n    } : {\n      opacity: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, \"Paused\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    style: stopped ? {\n      opacity: 0\n    } : {\n      opacity: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": `${formatedPercentage}` // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${formatedPercentage}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default DisplayTime;","map":{"version":3,"sources":["D:/colty/Documents/coding_projects/Thinkful/FrontEnd/RenderingWithReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/DisplayTime.js"],"names":["React","minutesToDuration","secondsToDuration","DisplayTime","focusOrBreak","breakTime","focusTime","activeTime","stopped","paused","formatedPercentage","console","log","opacity","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,SAASC,WAAT,CAAsB;AAACC,EAAAA,YAAD;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,SAA1B;AAAqCC,EAAAA,UAArC;AAAiDC,EAAAA,OAAjD;AAA0DC,EAAAA,MAA1D;AAAkEC,EAAAA;AAAlE,CAAtB,EAA8G;AAE7GC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEM;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAEC,OAAO,GAAG;AAACK,MAAAA,OAAO,EAAE;AAAV,KAAH,GAAkB;AAACA,MAAAA,OAAO,EAAE;AAAV,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEV;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCT,YAAY,GAAG,UAAH,GAAgB,UAA7D,WAA8EA,YAAY,GAAGH,iBAAiB,CAACK,SAAD,CAApB,GAAkCL,iBAAiB,CAACI,SAAD,CAA7I,aAFU,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRH,iBAAiB,CAACK,UAAD,CADT,eAJF,eAOP;AAAI,IAAA,KAAK,EAAEE,MAAM,GAAG;AAACI,MAAAA,OAAO,EAAE;AAAV,KAAH,GAAkB;AAACA,MAAAA,OAAO,EAAE;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPO,CADF,CAFN,eAaM;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAEL,OAAO,GAAG;AAACK,MAAAA,OAAO,EAAE;AAAV,KAAH,GAAkB;AAACA,MAAAA,OAAO,EAAE;AAAV,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAgB,GAAEJ,kBAAmB,EALvC,CAK0C;AAL1C;AAME,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAG,GAAEL,kBAAmB;AAA/B,KANT,CAM8C;AAN9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAbN,CADD;AA8BA;;AAED,eAAeP,WAAf","sourcesContent":["import React from 'react'\r\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\"\r\n\r\nfunction DisplayTime( {focusOrBreak, breakTime, focusTime, activeTime, stopped, paused, formatedPercentage} ) {\r\n\t\r\n\tconsole.log(activeTime)\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n        <div className=\"row mb-2\" style={stopped ? {opacity: 0} : {opacity: 100}}>\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n<h2 data-testid=\"session-title\">{focusOrBreak ? 'Focusing' : 'On Break'} for {focusOrBreak ? minutesToDuration(focusTime) : minutesToDuration(breakTime)} minutes</h2>\r\n            {/* TODO: Update message below to include time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n\t\t\t{secondsToDuration(activeTime)} remaining\r\n            </p>\r\n\t\t\t<h3 style={paused ? {opacity: 0} : {opacity: 100}}>Paused</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\" style={stopped ? {opacity: 0} : {opacity: 100}}>\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={`${formatedPercentage}` }// TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${formatedPercentage}%` }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t)\r\n}\r\n\r\nexport default DisplayTime"]},"metadata":{},"sourceType":"module"}